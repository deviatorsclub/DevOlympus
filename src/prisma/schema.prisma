generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String   @unique
  image         String?
  loginJson     Json
  isBlocked     Boolean  @default(false)
  team          Team?
  createdAt     DateTime @default(now())
  loggedInTimes Int      @default(1)
  lastLogin     DateTime @default(now())
  isAdmin       Boolean  @default(false)

  @@unique([id])
}

enum TeamSelectionStatus {
  SELECTED
  REJECTED
  NOT_DECIDED
}

model Team {
  id                  String              @id @default(cuid())
  displayId           String              @unique
  name                String
  presentationUrl     String
  theme               String
  createdAt           DateTime            @default(now())
  captain             User                @relation(fields: [captainId], references: [id])
  captainId           String              @unique
  selectedForRound2   TeamSelectionStatus @default(NOT_DECIDED)
  selectionStatusLogs Json?
  members             TeamMember[]
  payment             Payment?
}

model TeamMember {
  id     String  @id @default(cuid())
  name   String
  email  String
  rollNo String
  isLead Boolean @default(false)
  team   Team    @relation(fields: [teamId], references: [id], onDelete: Cascade)
  number String
  teamId String

  @@unique([email, teamId])
}

model Payment {
  id               String   @id @default(cuid())
  teamId           String   @unique
  team             Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
  senderName       String
  mobileNumber     String
  screenshotUrl    String
  screenshotPublicId String
  verified         Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
